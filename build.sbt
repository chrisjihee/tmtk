organization := "edu.kaist"
name := "tmtk"
version := "1.0"
scalaVersion := "2.10.6"
scalacOptions += "-P:continuations:enable"
autoCompilerPlugins := true

libraryDependencies += compilerPlugin("org.scala-lang.plugins" % "continuations" % "2.10.6")
libraryDependencies += "org.scala-lang" % "scala-compiler" % "2.10.6"
libraryDependencies += "com.jsuereth" % "scala-arm_2.10" % "1.4"
libraryDependencies += "log4j" % "log4j" % "1.2.17"
libraryDependencies += "org.slf4j" % "slf4j-log4j12" % "1.7.16"
libraryDependencies += "org.json" % "json" % "20160212"
libraryDependencies += "com.google.code.gson" % "gson" % "2.6.2"
libraryDependencies += "commons-dbutils" % "commons-dbutils" % "1.6"
libraryDependencies += "com.datastax.cassandra" % "cassandra-driver-core" % "3.0.0"
libraryDependencies += "org.apache.opennlp" % "opennlp-tools" % "1.6.0"
libraryDependencies += "edu.emory.clir" % "clearnlp" % "3.2.0"
libraryDependencies += "edu.emory.clir" % "clearnlp-dictionary" % "3.2"
libraryDependencies += "edu.emory.clir" % "clearnlp-global-lexica" % "3.1"
libraryDependencies += "edu.emory.clir" % "clearnlp-general-en-ner-gazetteer" % "3.0"
libraryDependencies += "edu.emory.clir" % "clearnlp-general-en-pos" % "3.2"
libraryDependencies += "edu.emory.clir" % "clearnlp-general-en-dep" % "3.2"
libraryDependencies += "edu.emory.clir" % "clearnlp-general-en-ner" % "3.1"
libraryDependencies += "edu.emory.clir" % "clearnlp-general-en-srl" % "3.0"
libraryDependencies += "edu.stanford.nlp" % "stanford-corenlp" % "3.6.0"
libraryDependencies += "edu.stanford.nlp" % "stanford-corenlp" % "3.6.0" classifier "models-english"
libraryDependencies += "edu.washington.cs.knowitall.ollie" % "ollie-core_2.10" % "1.0.3"
libraryDependencies += "edu.washington.cs.knowitall.nlptools" % "nlptools-parse-malt_2.10" % "2.4.5"
libraryDependencies += "de.tudarmstadt.ukp.wikipedia" % "de.tudarmstadt.ukp.wikipedia.api" % "1.0.0"
libraryDependencies += "org.apache.lucene" % "lucene-core" % "5.5.0"
libraryDependencies += "org.apache.lucene" % "lucene-analyzers-common" % "5.5.0"
libraryDependencies += "org.apache.lucene" % "lucene-queryparser" % "5.5.0"

assemblyMergeStrategy in assembly := getStrategy
Project.inConfig(Test)(baseAssemblySettings ++ Seq(assemblyMergeStrategy in assembly := getStrategy))
def getStrategy(path: String) = path match {
  case x if x.startsWith("META-INF") => MergeStrategy.discard
  case x if x.equals("log4j.properties") => MergeStrategy.first
  case x if x.matches(".+[.](class|xz)") => MergeStrategy.first
  case PathList("javax", "servlet", _*) => MergeStrategy.first
  case PathList("edu", "emory", "clir", _*) => MergeStrategy.first
  case PathList("edu", "stanford", "nlp", _*) => MergeStrategy.first
  case PathList("opennlp", _*) => MergeStrategy.first
  case PathList("hannanum", _*) => MergeStrategy.first
  case PathList("maltparser", _*) => MergeStrategy.first
  case PathList(x@_*) if x.size > 1 && x.last.matches(".+[.](properties|xml|txt)") => MergeStrategy.first
  case _ => MergeStrategy.discard
}
